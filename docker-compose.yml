version: "3.5"

services:

  ## UNIVERSALDOT NODE #####################
  node:
    build: ./node
    networks:
      universaldot:
        ipv4_address: 172.28.0.2
    restart: on-failure
    stop_signal: SIGINT
    stop_grace_period: 10s
    ports:
      - 9944:9944
    expose:
      - 9944
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "10"
    command: bash -c "./node-template --dev --ws-external"

  ## UNIVERSALDOT FRONT-END ################
  front-end:
    build: ./front-end
    networks:
      universaldot:
        ipv4_address: 172.28.0.3
    restart: on-failure
    stop_signal: SIGINT
    stop_grace_period: 10s
    ports:
      - 8000:8000
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "10"
    environment:
      - PROVIDER_SOCKET=ws://127.0.0.1:9944
      - ENVIROMENT=dev
    command: bash -c "./start.sh start"


  ## IPFS #################################
  ipfs-node:
    image: ipfs/go-ipfs:v0.5.1
    restart: on-failure
    ports:
      - "4001:4001"
      - "5001:5001"
      - "8080:8080"
    volumes:
      - ./ipfs-data/daemon/staging:/export
      - ./ipfs-data/daemon/data:/data/ipfs

  ## IPFS CLUSTER #########################
  ipfs-cluster:
    image: ipfs/ipfs-cluster:v0.13.0
    container_name: ipfs-cluster
    depends_on:
      - ipfs-node
    environment:
      CLUSTER_PEERNAME: "UniversalDot Cluster"
      # CLUSTER_SECRET: ${CLUSTER_SECRET} # From shell variable if set
      CLUSTER_IPFSHTTP_NODEMULTIADDRESS: /dns4/ipfs-node/tcp/5001
      CLUSTER_CRDT_TRUSTERPEERS: '*' # Trust all peers in Cluster (initially)
      CLUSTER_RESTAPI_CORSALLOWEDORIGINS: '*'
      CLUSTER_RESTAPI_HTTPLISTENMULTIADDRESS: /ip4/0.0.0.0/tcp/9094 # Expose API
      CLUSTER_MONITORPINGINTERVAL: 1s # Speed up peer discovery
    ports:
      - "9094:9094"
    volumes:
      - ./ipfs-data/cluster:/data/ipfs-cluster

  ## TensorFlow #################################
  tensorflow-serving:
    build: ./tensorflow
    container_name: tensorflow
    restart: on-failure
    ports:
      - 8500:8500
      - 8501:8501
    volumes:
      - tf-model:/models/use
    command: --mount type=bind,source=/models/model/use,target=/models/use -e MODEL_NAME=use -t tensorflow/serving


volumes:
  node-data: {}
  peer_staging:
  peer_data:
  peer_cluster:
  tf-model: 

networks:
  universaldot:
    name: universaldot
    ipam:
      driver: default
      config:
        - subnet: 172.28.0.0/24